- name: Create requirements directory
  win_file:
    path: C:\temp\requirements
    state: directory

- name: Download VDA
  win_get_url:
    url: "{{ vda_server_url }}"
    dest: c:\temp\requirements\VDAServerSetup_2206.exe

- name: Download Optimizer Tool
  win_get_url:
    url: "{{ optimizer_url }}"
    dest: c:\temp\requirements\CitrixOptimizerTool.zip

- name: Join Domain
  ansible.windows.win_domain_membership:
    dns_domain_name: "{{ domain_name }}"
    domain_admin_user: administrator
    domain_admin_password: "{{ administrator_password }}"
    state: domain
  register: domain_state

- name: Reboot server if requred
  ansible.windows.win_reboot:
  when: domain_state.reboot_required

- name: Sleep for 60 seconds after restart
  ansible.builtin.wait_for:
    timeout: 60
  delegate_to: localhost

- name: Install VDA part 1
  ansible.windows.win_package:
    path: c:\temp\requirements\VDAServerSetup_2206.exe
    product_id: '{7E26A26E-E98B-4297-BEF4-0958A110E547}'
    state: present
    arguments: /passive /logpath c:\temp\ /controllers "{{ cc_names }}" /enable_remote_assistance /masterimage /noreboot /noresume /virtualmachine /wem_cloud_connectors "{{ cc_names_wem }}" /enable_hdx_ports /enable_hdx_udp_ports /enable_ss_ports /wem_add_firewall_rules
    expected_return_code: [0, 3, 8]
  register: installvda
  tags: vda
  become: true

- name: Reboot server if requred
  ansible.windows.win_reboot:
  when: (installvda.rc == 0) or (installvda.rc == 3) or (installvda.rc == 8)
  ignore_errors: true

- name: Install VDA part 2
  ansible.windows.win_package:
    path: c:\temp\requirements\VDAServerSetup_2206.exe
    product_id: '{7E26A26E-E98B-4297-BEF4-0958A110E547}'
    state: present
    arguments: /passive /logpath c:\temp\ /controllers "{{ cc_names }}" /enable_remote_assistance /masterimage /noreboot /noresume /virtualmachine /wem_cloud_connectors "{{ cc_names_wem }}" /enable_hdx_ports /enable_hdx_udp_ports /enable_ss_ports /wem_add_firewall_rules
    expected_return_code: [0, 3, 8]
  register: installvda
  tags: vda
  become: true
  when: installvda.rc == 3

- name: Check if Optimizer already run
  ansible.windows.win_reg_stat:
    path: HKLM:\SOFTWARE\Citrix\Optimizer\OS Optimizations
  register: optimizer_reg

- name: Decompress Optimizer Zip File
  community.windows.win_unzip:
    src: c:\temp\requirements\CitrixOptimizerTool.zip
    dest: c:\temp\requirements\CitrixOptimizerTool
  when: optimizer_reg.exists == false

- name: Launch Citrix Optimizer
  win_command: 'powershell.exe -ExecutionPolicy ByPass -File c:\temp\requirements\CitrixOptimizerTool\CtxOptimizerEngine.ps1 -Mode Execute'
  when: optimizer_reg.exists == false

- name: Shutdown the VM
  win_command: powershell.exe Stop-Computer -Force