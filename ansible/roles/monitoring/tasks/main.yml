- name: Update all packages
  ansible.builtin.apt:
    name: "*"
    state: latest
  become: true

- name: Install required system packages
  ansible.builtin.apt:
    pkg:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
      - python3-pip
      - virtualenv
      - python3-setuptools
      - gnupg2
    update_cache: true
  become: true

- name: Install selenium from pip
  ansible.builtin.pip:
    name: selenium
  become: true

- name: Add Docker GPG apt Key
  ansible.builtin.apt_key:
    url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
  become: true

- name: Add Docker Repository
  ansible.builtin.apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/{{ ansible_system | lower }}/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable
  become: true

- name: Update apt and install docker-ce
  ansible.builtin.apt:
    name: ['docker-ce', 'docker-ce-cli', 'containerd.io', 'docker-compose']
    update_cache: true
  become: true

- name: Install Microsoft Powershell
  ansible.builtin.apt:
    deb: https://github.com/PowerShell/PowerShell/releases/download/v7.2.6/powershell-lts_7.2.6-1.deb_amd64.deb
  become: true

- name: Create a directory if it does not exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0777'
  loop:
    - /var/appdata/graylog
    - /var/appdata/prometheus
    - /var/appdata/mongodb
    - /var/appdata/grafana
    - /var/appdata/opensearch
    - /var/requirements
  become: true

- name: Copy file with owner and permissions
  ansible.builtin.copy:
    src: "{{ role_path }}/files/docker"
    dest: /var/requirements
    mode: '0777'
    force: true
  become: true
  register: copy_requirements
  tags: "copy"

- name: Deploy Docker Compose stack
  community.docker.docker_compose:
    project_src: /var/requirements/docker
    files:
      - docker-compose.yaml
  become: true

- name: Restart Docker Compose stack
  community.docker.docker_compose:
    project_src: /var/requirements/docker
    files:
      - docker-compose.yaml
    restarted: true
  become: true
  when: copy_requirements.changed

- name: Change file ownership, group and permissions
  ansible.builtin.file:
    path: /var/appdata/opensearch
    owner: root
    group: root
    mode: '0777'
  become: true

- name: Wait until HTTP status is 200
  ansible.builtin.uri:
    url: 'http://localhost:9000'
    return_content: true
    validate_certs: false
    status_code:
      - 200
  until: uri_output.status == 200
  retries: 24 # Retries for 24 * 5 seconds = 120 seconds = 2 minutes
  delay: 5 # Every 5 seconds
  register: uri_output

# - name: get graylog global udp input for receiving logs
#   ansible.builtin.uri:
#     url: http://localhost:9000/api/system/inputs
#     method: GET
#     user: "admin"
#     password: "!Friskies2019!"
#     force_basic_auth: true
#     status_code: 200
#     body_format: json
#     headers:
#       X-Requested-By: ""
#   register: get_graylog_input

# - name: Show facts available on the system
#   ansible.builtin.debug:
#     var: get_graylog_input

- name: Create graylog global udp input for receiving logs
  ansible.builtin.uri:
    url: http://localhost:9000/api/system/inputs
    method: POST
    user: "admin"
    password: "!Friskies2019!"
    body: '{"title":"Beat","type":"org.graylog.plugins.beats.Beats2Input","configuration":{"bind_address":"0.0.0.0","port":5044,"recv_buffer_size":262144,"override_source":null,"decompress_size_limit":8388608},"global":true}'
    force_basic_auth: true
    status_code: 201
    body_format: json
    headers:
      X-Requested-By: ""
